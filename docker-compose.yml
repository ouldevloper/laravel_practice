version: '3'
services:
  
  #PHP Service
  app:
    build:
      args:
        user: user
        uid: 1000
      context: .
      dockerfile: Dockerfile
    image: user/php
    container_name: app
    restart: always
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: always
    tty: true
    depends_on:
      - db
      - cache

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./.docker/nginx-logs:/var/log/nginx
    networks:
      - app-network


  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Cache Service
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./.docker/cache:/data
    networks:
      - app-network
  
  #Queue Service
  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    restart: always
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge


#Volumes
volumes:
  dbdata:
    driver: local